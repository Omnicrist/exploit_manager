import util_marshal
import random
import re
import string
# you can check available modules in conf.json


# fill the following function
def exploit(_opponent):
    checkpoint, i, n, m = 0, 0, 10, 1000
    while True:
        alphanum = list(string.digits + string.ascii_lowercase + string.ascii_uppercase)
        flag_str = "".join([random.choice(alphanum) for _ in range(25)])
        flag = "CCIT{" + flag_str + "}"
        flag_regex = "CCIT[{][0-9a-zA-Z]{25}[}]"
        res = random.choice([flag, "lol nope"])
        flags_found = re.findall(flag_regex, res)
        if len(flags_found) > 0:
            checkpoint = i
            yield flags_found
        elif (i - checkpoint) % m >= n:
            yield []
        else:
            i = (i + 1) % m


if __name__ == "__main__":
    opponents = []
    service = "service-name_vulnerability-name"
    exploit_type = "yield"
    serial = util_marshal.serialize_exploit(exploit, opponents, service, exploit_type)
    # don't change the name of the file, otherwise you will not be able to get the serialized exploit
    with open("volume/uuid_exploit.JSON", 'w') as f:
        f.write(serial)
    flags = next(exploit("10.0.0.36"))
    print(flags)
