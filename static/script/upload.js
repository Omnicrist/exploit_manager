/*eslint-env es6*/
/*global document*/
/*global window*/
/*global FileReader*/
/*global setTimeout*/

document.querySelectorAll('.drop-zone__input').forEach(inputElement => {
    const dropZoneElement = inputElement.closest('.drop-zone');
    let promptElement = dropZoneElement.querySelector(".drop-zone__prompt");

    if (promptElement) {
        promptElement.addEventListener("click", () => {
            inputElement.click();
        });
    }
    
    inputElement.addEventListener("change", () => {
        updateThumbnail(dropZoneElement, inputElement, inputElement.files[0]);
    });
    
    dropZoneElement.addEventListener("dragover", e => {
        e.preventDefault();
        dropZoneElement.classList.add("drop-zone--over");
    });
    
    ["dragleave", "dragend"].forEach(type => {
        dropZoneElement.addEventListener(type, () =>{
            dropZoneElement.classList.remove("drop-zone--over");
        });
    });
    
    dropZoneElement.addEventListener("drop", e => {
        e.preventDefault();
        
        if (e.dataTransfer.files.length) {
            inputElement.files = e.dataTransfer.files;
            updateThumbnail(dropZoneElement, inputElement, e.dataTransfer.files[0]);
        }
        
        dropZoneElement.classList.remove("drop-zone--over");
    });
});

/*
*Aggiorna la thumbnail quando viene rilasciato un elemento sulla drop zone
*
*@param {HTMLElement} dropZoneElement
*@param {File} file
*/

function updateThumbnail(dropZoneElement, inputElement, file) {
    if (window.confirm('Sicuro di voler uploadare il file "' + file.name + '"?')) {
        let thumbnailElement = dropZoneElement.querySelector(".drop-zone__thumb");
    
        //Tolgo il prompt se presente
        if (dropZoneElement.querySelector(".drop-zone__prompt")) {
            dropZoneElement.querySelector(".drop-zone__prompt").remove();
        }
    
        //Se Ã¨ la prima volta che eseguo la funzione devo crearla
        if (!thumbnailElement) {
            thumbnailElement = document.createElement("div");
            thumbnailElement.classList.add("drop-zone__thumb");
            dropZoneElement.appendChild(thumbnailElement);

            thumbnailElement.addEventListener("click", () => {
                inputElement.click();
            });
        }
    
        thumbnailElement.dataset.label = file.name;
    
        if (file.type.startsWith("image/")) {
            const reader = new FileReader();
        
            reader.readAsDataURL(file);
            reader.onload = () => {
                thumbnailElement.style.backgroundImage = `url('${ reader.result }')`;
            };
        } else {
            thumbnailElement.style.backgroundImage = null;
        }
    }
}

function AutoRefresh(t) {
    setTimeout("location.reload(true);", t);
}

AutoRefresh(120000);
